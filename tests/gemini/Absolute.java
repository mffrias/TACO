package gemini;

public class Absolute {

    /*
Prompt:
write  a java program and JML instructions that takes in an integer
and returns the absolute value.
     */
/*
Store here the java code generated.
*/
    /*@ public normal_behavior
      @ requires true;
      @ ensures \result == ((i >= 0) ? i : -i);
      @*/
    public static int abs(int i) {
        if (i >= 0) {
            return i;
        } else {
            return -i;
        }
    }




    /*store here your opinion about the quality of the generated spec

Different to the JML annotations generated by chatGPT, gemini AI seemed to have generated a more formal set of instructions, simpler than the ones generated by chatGPT
     */

    /*store here your opinion about the quality of the generated code
 The generated code follows a good logic that seems to work with different edge cases.
     */

    /*store here the result of the analysis with TACO
* Outcome                 : UNSAT: No failures were detected within the given scopes.
    * Solving time            : 1321

00002671  Analysis finished
     */

    /*if TACO's outcome was "SAT: A failure has been detected", store here
    the source code of the method in folder "generated" that describes the
    counterexample. Otherwise report "UNSAT".
UNSAT
     */


}
