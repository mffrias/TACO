package genai.chatGPT;
//Prompt:
//Generate a JML specification and code implementation for the method public static long that takes in two integers, n and r, in order to compute the number of ways to choose r elements from a set of n elements without considering order.

public class Combination {
    //JML spec:
/*@
  requires n >= 0 && r >= 0 && r <= n;
  ensures \result >= 0;
  // ensures \result == factorial(n) / (factorial(r) * factorial(n - r)); // (comment only)
@*/

    //Code Generated:
    public static long combinations(int n, int r) {
        if (r > n - r) {
            r = n - r; // use symmetry property C(n, r) = C(n, n - r)
        }

        long result = 1;
        for (int i = 1; i <= r; i++) {
            result *= (n - i + 1);
            result /= i;
        }

        return result;
    }
}
/*store here your opinion about the quality of the generated spec
The specification generated by chatGPT is short, simple and concise, holding true for the testable values.
 */

    /*store here your opinion about the quality of the generated code
?The generated code is a good approach for the combination problem, and verified by the JML specifications
/*store here the result of the analysis with TACO

 * Outcome                 : UNSAT: No failures were detected within the given scopes.
    * Solving time            : 51259
 */

    /*if TACO's outcome was "SAT: A failure has been detected", store here
    the source code of the method in folder "generated" that describes the
    counterexample. Otherwise report "UNSAT".
        UNSAT
     */
